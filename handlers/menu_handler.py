from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from config.settings import (
    DEVICE_TYPES,
    TOP_UP_OPTIONS,
)
from typing import List
from database.models import Device

class MenuHandler:
    @staticmethod
    def create_agreement_menu() -> InlineKeyboardMarkup:
        """Create agreement acceptance keyboard."""
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton("üìú –ü—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", callback_data='accept_agreement'))
        return keyboard

    @staticmethod
    def create_main_menu() -> InlineKeyboardMarkup:
        """Create main menu keyboard."""
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data='update'))
        keyboard.row(InlineKeyboardButton("üì± –ú–æ–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", callback_data='my_devices'))
        keyboard.row(InlineKeyboardButton("üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data='top_up'))
        keyboard.row(InlineKeyboardButton("üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data='referral'))
        keyboard.row(InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data='help'))
        return keyboard

    @staticmethod
    def create_devices_menu() -> InlineKeyboardMarkup:
        """Create devices menu keyboard."""
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", callback_data='add_device'))
        keyboard.row(InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu'))
        return keyboard

    def create_device_info_menu(self, device_id: int) -> InlineKeyboardMarkup:
        """Create device info menu keyboard."""
        keyboard = InlineKeyboardMarkup()
        keyboard.row(
            InlineKeyboardButton(
                "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥",
                callback_data=f"refresh_config_{device_id}"
            ),
            InlineKeyboardButton(
                "‚è≥ –ü—Ä–æ–¥–ª–∏—Ç—å",
                callback_data=f"extend_device_{device_id}"
            )
        )
        keyboard.row(
            InlineKeyboardButton(
                "üíæ –°–∫–∞—á–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥",
                callback_data=f"download_config_{device_id}"
            )
        )
        keyboard.row(
            InlineKeyboardButton(
                "‚ùå –£–¥–∞–ª–∏—Ç—å",
                callback_data=f"delete_device_{device_id}"
            ),
            InlineKeyboardButton(
                "üîô –ù–∞–∑–∞–¥",
                callback_data="my_devices"
            )
        )
        return keyboard

    def create_devices_list_menu(self, devices: List[Device]) -> InlineKeyboardMarkup:
        """Create menu with list of devices."""
        keyboard = InlineKeyboardMarkup()
        for device in devices:
            keyboard.row(
                InlineKeyboardButton(
                    f"üì± {device.device_type}",
                    callback_data=f"device_info_{device.id}"
                )
            )
        keyboard.row(InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", callback_data='add_device'))
        keyboard.row(InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu'))
        return keyboard

    def create_my_devices_button(self) -> InlineKeyboardMarkup:
        """Create button to return to devices menu."""
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton("üì± –ö –º–æ–∏–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º", callback_data='my_devices'))
        return keyboard

    def create_cancel_menu_devices(self) -> InlineKeyboardMarkup:
        """Create cancel keyboard for devices."""
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data='my_devices'))
        return keyboard

    @staticmethod
    def create_device_types_menu() -> InlineKeyboardMarkup:
        """Create device types selection keyboard."""
        keyboard = InlineKeyboardMarkup()
        for device_type in DEVICE_TYPES:
            keyboard.row(InlineKeyboardButton(
                f"üì± {device_type}",
                callback_data=f'select_device_{device_type}'
            ))
        keyboard.row(InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='my_devices'))
        return keyboard

    @staticmethod
    def create_top_up_menu() -> InlineKeyboardMarkup:
        """Create top-up menu keyboard."""
        keyboard = InlineKeyboardMarkup()
        for amount in TOP_UP_OPTIONS:
            keyboard.row(InlineKeyboardButton(
                f"üí∞ {amount} —Ä—É–±",
                callback_data=f'top_up_{amount}'
            ))
        keyboard.row(InlineKeyboardButton(
            "üí∞ –î—Ä—É–≥–∞—è —Å—É–º–º–∞",
            callback_data='custom_amount'
        ))
        keyboard.row(InlineKeyboardButton(
            "üìä –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π",
            callback_data='payment_history'
        ))
        keyboard.row(InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu'))
        return keyboard

    @staticmethod
    def create_cancel_menu() -> InlineKeyboardMarkup:
        """Create cancel keyboard."""
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data='cancel_input'))  # –ò–∑–º–µ–Ω–∏–º callback_data –∑–¥–µ—Å—å
        return keyboard

    @staticmethod
    def create_help_menu() -> InlineKeyboardMarkup:
        """Create help menu keyboard."""
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton("üìù –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", callback_data='start_support'))
        keyboard.row(InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu'))
        return keyboard

    @staticmethod
    def create_back_to_menu() -> InlineKeyboardMarkup:
        """Create back to menu keyboard."""
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu'))
        return keyboard

    @staticmethod
    def create_device_selection_message() -> str:
        return "–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞ (–æ—Ç 1 –¥–æ 30):"